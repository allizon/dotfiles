{"version":1,"windowDimensions":{"x":0,"y":23,"width":960,"height":1057,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/alholt/code/mcdn-portal/test/functional"],"buffers":[{"text":"require 'test_helper'\n\ndef create_user\n  u = create(:user, :login, :ccare)\n  c = customers(:portal_admin)\n  c.cpcodes = create_list(:cpcode, 3)\n  c.save\n  c.update_attributes(admin: u)\n  u.update_attributes(customer: c)\n  u\nend\n\ndef arl_list\n  %w(\n    arl1.test.net\n    http://arl2.test.net\n    https://arl3.test.net\n    ftp://arl4.test.net\n    http:/arl5.test.net\n\n    http:arl6.test.net\n  ).join(\"\\n\")\nend\n\ndef modified_arl_list\n  %w(\n    http://arl1.test.net\n    http://arl2.test.net\n    https://arl3.test.net\n    http://arl4.test.net\n    http://arl5.test.net\n    http://arl6.test.net\n  ).join(\"\\n\")\nend\n\nclass PurgesControllerTest < Capybara::Rails::TestCase\n  setup do\n    @user = create_user\n    login(@user.name)\n    visit(new_purge_path)\n  end\n\n  # test 'should get index' do\n  #   get :admin_index\n  #   assert_response :success\n  #   assert_not_nil assigns(:ucds_categories)\n  # end\n\n  test 'should correctly parse/fix ARLs', js: true do\n    visit(new_purge_path)\n    click_link('ARL Purge')\n    purge_arls_field = find_field('purge_arls')\n    fill_in('purge_arls', with: arl_list)\n    fill_in('purge_name', with: 'Confirm on #purge_arls blur')\n    ap purge_arls_field.value\n    # assert_equal(purge_arls_field.value, modified_arl_list)\n  end\nend\n\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":0,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":22,"column":2},"end":{"row":22,"column":2}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/alholt/code/mcdn-portal/test/functional/purge.rb","digestWhenLastPersisted":"071abdd3f5de3fbbf6e26b652eb5d825bca7e556","preferredLineEnding":null,"deserializer":"TextBuffer","version":4}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/alholt/code/mcdn-portal/test/functional/purge.rb","tabLength":2,"largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/alholt/code/mcdn-portal/test/functional/purge.rb","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"fuzzy-finder":{"/Users/alholt/code/mcdn-portal/test/functional/purge.rb":1450880170151},"metrics":{"sessionLength":11839},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/alholt/code/mcdn-portal/test/functional":{"isExpanded":true,"entries":{"pg_to_query":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/alholt/code/mcdn-portal/test/functional/purge.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}